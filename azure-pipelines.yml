jobs:
- job: Linux
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - task: CmdLine@2
    inputs:
      script: |
        sudo apt-get update
        sudo apt-get install castxml
  - task: CmdLine@2
    inputs:
      script: |
        dotnet tool install -g Cake.Tool --version 0.30.0
  
  - script: |
      export PATH="$PATH:$HOME/.dotnet/tools"
      dotnet --info
      printenv
      dotnet cake build.cake -target="Azure-Linux" -configuration="Release"
     
- job: macOS
  pool:
    vmImage: 'xcode9-macos10.13'
  steps:
  - task: DotNetCoreInstaller@0
    inputs:
      version: '2.1.403'
  - task: Xcode@5
    inputs:
      actions: 'build'
      scheme: ''
      sdk: 'macosx10.13'
      configuration: 'Release'
      xcWorkspacePath: '**/*.xcodeproj/project.xcworkspace'
      xcodeVersion: 'default' # Options: 8, 9, default, specifyPath
      args: '-derivedDataPath ./'
  - task: CmdLine@2
    inputs:
      script: brew install castxml
  - task: CmdLine@2
    inputs:
      script: |
        dotnet tool install -g Cake.Tool --version 0.30.0
  - script: |
      export COREHOST_TRACE=0
      export DOTNET_SKIP_FIRST_TIME_EXPERIENCE=1
      export DOTNET_CLI_TELEMETRY_OPTOUT=1
      which dotnet
      dotnet --info
      export PATH="$PATH:$HOME/.dotnet/tools"
      dotnet --info
      printenv
      dotnet cake build.cake -target="Azure-OSX" -configuration="Release"
  
  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: '$(Build.SourcesDirectory)/Build/Products/Release/'
      artifactName: 'Avalonia.Native.OSX'
  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: '$(Build.SourcesDirectory)/artifacts/bin'
      artifactName: 'BinariesOSX'

- job: Windows
  pool:
    vmImage: 'vs2017-win2016'
  steps:
  - task: CmdLine@2
    inputs:
      script: |
        dotnet tool install -g Cake.Tool --version 0.30.0
  - task: CmdLine@2
    inputs:
      script: |
        set PATH=%PATH%;%USERPROFILE%\.dotnet\tools
        dotnet cake build.cake -target="Azure-Windows" -configuration="Release"
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.SourcesDirectory)/artifacts/nuget'
      artifactName: 'NuGet'
  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: '$(Build.SourcesDirectory)/artifacts/zip'
      artifactName: 'Samples'
  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: '$(Build.SourcesDirectory)/artifacts/bin'
      artifactName: 'BinariesWindows'
