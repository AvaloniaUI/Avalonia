//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     GenAPI Version: 7.0.8.6004
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Avalonia.Dialogs
{
    public partial class AboutAvaloniaDialog : Avalonia.Controls.Window
    {
        public AboutAvaloniaDialog() { }
        public static bool IsDevelopmentBuild { [System.Runtime.CompilerServices.CompilerGeneratedAttribute] get { throw null; } }
        public static string Version { [System.Runtime.CompilerServices.CompilerGeneratedAttribute] get { throw null; } }
        public static void OpenBrowser(string url) { }
    }
    [Avalonia.Controls.Metadata.TemplatePartAttribute("PART_Files", typeof(Avalonia.Controls.ListBox))]
    [Avalonia.Controls.Metadata.TemplatePartAttribute("PART_QuickLinks", typeof(Avalonia.Controls.Control))]
    public partial class ManagedFileChooser : Avalonia.Controls.Primitives.TemplatedControl
    {
        public ManagedFileChooser() { }
        protected override void OnApplyTemplate(Avalonia.Controls.Primitives.TemplateAppliedEventArgs e) { }
        protected override void OnDataContextChanged(System.EventArgs e) { }
    }
    public static partial class ManagedFileDialogExtensions
    {
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.ObsoleteAttribute("Use Window.StorageProvider API or TopLevel.StorageProvider API")]
        public static System.Threading.Tasks.Task<string[]> ShowManagedAsync(this Avalonia.Controls.OpenFileDialog dialog, Avalonia.Controls.Window parent, Avalonia.Dialogs.ManagedFileDialogOptions? options = null) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.ObsoleteAttribute("Use Window.StorageProvider API or TopLevel.StorageProvider API")]
        public static System.Threading.Tasks.Task<string[]> ShowManagedAsync<TWindow>(this Avalonia.Controls.OpenFileDialog dialog, Avalonia.Controls.Window parent, Avalonia.Dialogs.ManagedFileDialogOptions? options = null) where TWindow : Avalonia.Controls.Window, new() { throw null; }
        public static Avalonia.AppBuilder UseManagedSystemDialogs(this Avalonia.AppBuilder builder) { throw null; }
        public static Avalonia.AppBuilder UseManagedSystemDialogs<TWindow>(this Avalonia.AppBuilder builder) where TWindow : Avalonia.Controls.Window, new() { throw null; }
    }
    public partial class ManagedFileDialogOptions
    {
        public ManagedFileDialogOptions() { }
        public bool AllowDirectorySelection { [System.Runtime.CompilerServices.CompilerGeneratedAttribute] get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute] set { } }
    }
}
namespace Avalonia.Dialogs.Internal
{
    public partial class AvaloniaDialogsInternalViewModelBase : System.ComponentModel.INotifyPropertyChanged
    {
        public AvaloniaDialogsInternalViewModelBase() { }
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged { add { } remove { } }
        protected internal bool RaiseAndSetIfChanged<T>(ref T field, T value, [System.Runtime.CompilerServices.CallerMemberNameAttribute] string propertyName = null) { throw null; }
        protected internal void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberNameAttribute] string propertyName = null) { }
    }
    public partial class ChildFitter : Avalonia.Controls.Decorator
    {
        public ChildFitter() { }
        protected override Avalonia.Size ArrangeOverride(Avalonia.Size finalSize) { throw null; }
        protected override Avalonia.Size MeasureOverride(Avalonia.Size availableSize) { throw null; }
    }
    public partial class FileSizeStringConverter : Avalonia.Data.Converters.IValueConverter
    {
        public FileSizeStringConverter() { }
        public object Convert(object value, System.Type targetType, object parameter, System.Globalization.CultureInfo culture) { throw null; }
        public object ConvertBack(object value, System.Type targetType, object parameter, System.Globalization.CultureInfo culture) { throw null; }
    }
    public partial class ManagedFileChooserFilterViewModel : Avalonia.Dialogs.Internal.AvaloniaDialogsInternalViewModelBase
    {
        public ManagedFileChooserFilterViewModel(Avalonia.Platform.Storage.FilePickerFileType filter) { }
        public string Name { [System.Runtime.CompilerServices.CompilerGeneratedAttribute] get { throw null; } }
        public bool Match(string filename) { throw null; }
        public override string ToString() { throw null; }
    }
    public enum ManagedFileChooserItemType
    {
        File = 0,
        Folder = 1,
        Volume = 2,
    }
    public partial class ManagedFileChooserItemViewModel : Avalonia.Dialogs.Internal.AvaloniaDialogsInternalViewModelBase
    {
        public ManagedFileChooserItemViewModel() { }
        public ManagedFileChooserItemViewModel(Avalonia.Dialogs.Internal.ManagedFileChooserNavigationItem item) { }
        public string DisplayName { get { throw null; } set { } }
        public string IconKey { get { throw null; } }
        public Avalonia.Dialogs.Internal.ManagedFileChooserItemType ItemType { get { throw null; } set { } }
        public System.DateTime Modified { get { throw null; } set { } }
        public string Path { get { throw null; } set { } }
        public long Size { get { throw null; } set { } }
        public string Type { get { throw null; } set { } }
    }
    public partial class ManagedFileChooserNavigationItem
    {
        public ManagedFileChooserNavigationItem() { }
        public string DisplayName { [System.Runtime.CompilerServices.CompilerGeneratedAttribute] get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute] set { } }
        public Avalonia.Dialogs.Internal.ManagedFileChooserItemType ItemType { [System.Runtime.CompilerServices.CompilerGeneratedAttribute] get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute] set { } }
        public string Path { [System.Runtime.CompilerServices.CompilerGeneratedAttribute] get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute] set { } }
    }
    public partial class ManagedFileChooserViewModel : Avalonia.Dialogs.Internal.AvaloniaDialogsInternalViewModelBase
    {
        public ManagedFileChooserViewModel(Avalonia.Dialogs.ManagedFileDialogOptions options) { }
        public ManagedFileChooserViewModel(Avalonia.Platform.Storage.FilePickerOpenOptions filePickerOpen, Avalonia.Dialogs.ManagedFileDialogOptions options) { }
        public ManagedFileChooserViewModel(Avalonia.Platform.Storage.FilePickerSaveOptions filePickerSave, Avalonia.Dialogs.ManagedFileDialogOptions options) { }
        public ManagedFileChooserViewModel(Avalonia.Platform.Storage.FolderPickerOpenOptions folderPickerOpen, Avalonia.Dialogs.ManagedFileDialogOptions options) { }
        public string FileName { get { throw null; } }
        public Avalonia.Collections.AvaloniaList<Avalonia.Dialogs.Internal.ManagedFileChooserFilterViewModel> Filters { [System.Runtime.CompilerServices.CompilerGeneratedAttribute] get { throw null; } }
        public Avalonia.Collections.AvaloniaList<Avalonia.Dialogs.Internal.ManagedFileChooserItemViewModel> Items { [System.Runtime.CompilerServices.CompilerGeneratedAttribute] get { throw null; } }
        public string Location { get { throw null; } }
        public Avalonia.Collections.AvaloniaList<Avalonia.Dialogs.Internal.ManagedFileChooserItemViewModel> QuickLinks { [System.Runtime.CompilerServices.CompilerGeneratedAttribute] get { throw null; } }
        public int QuickLinksSelectedIndex { get { throw null; } set { } }
        public Avalonia.Dialogs.Internal.ManagedFileChooserFilterViewModel SelectedFilter { get { throw null; } set { } }
        public Avalonia.Collections.AvaloniaList<Avalonia.Dialogs.Internal.ManagedFileChooserItemViewModel> SelectedItems { [System.Runtime.CompilerServices.CompilerGeneratedAttribute] get { throw null; } }
        public bool SelectingFolder { get { throw null; } }
        public Avalonia.Controls.SelectionMode SelectionMode { [System.Runtime.CompilerServices.CompilerGeneratedAttribute] get { throw null; } }
        public bool ShowFilters { [System.Runtime.CompilerServices.CompilerGeneratedAttribute] get { throw null; } }
        public bool ShowHiddenFiles { get { throw null; } set { } }
        public string Title { [System.Runtime.CompilerServices.CompilerGeneratedAttribute] get { throw null; } }
        public event System.Action CancelRequested { add { } remove { } }
        public event System.Action<string[]> CompleteRequested { add { } remove { } }
        public event System.Action<string> OverwritePrompt { add { } remove { } }
        public void Cancel() { }
        public void EnterPressed() { }
        public void GoUp() { }
        public void Navigate(Avalonia.Platform.Storage.IStorageFolder path, string initialSelectionName = null) { }
        public void Navigate(string path, string initialSelectionName = null) { }
        public void Ok() { }
        public void Refresh() { }
        public void SelectSingleFile(Avalonia.Dialogs.Internal.ManagedFileChooserItemViewModel item) { }
    }
    public partial class ResourceSelectorConverter : Avalonia.Controls.ResourceDictionary, Avalonia.Data.Converters.IValueConverter
    {
        public ResourceSelectorConverter() { }
        public object Convert(object key, System.Type targetType, object parameter, System.Globalization.CultureInfo culture) { throw null; }
        public object ConvertBack(object value, System.Type targetType, object parameter, System.Globalization.CultureInfo culture) { throw null; }
    }
}
namespace CompiledAvaloniaXaml
{
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
    public partial class !AvaloniaResources
    {
        internal !AvaloniaResources() { }
        public partial class NamespaceInfo:/AboutAvaloniaDialog.xaml : Avalonia.Markup.Xaml.XamlIl.Runtime.IAvaloniaXamlIlXmlNamespaceInfoProvider
        {
            public static Avalonia.Markup.Xaml.XamlIl.Runtime.IAvaloniaXamlIlXmlNamespaceInfoProvider Singleton;
            public NamespaceInfo:/AboutAvaloniaDialog.xaml() { }
            public virtual System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IReadOnlyList<Avalonia.Markup.Xaml.XamlIl.Runtime.AvaloniaXamlIlXmlNamespaceInfo>> XmlNamespaces { get { throw null; } }
            public virtual System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IReadOnlyList<Avalonia.Markup.Xaml.XamlIl.Runtime.AvaloniaXamlIlXmlNamespaceInfo>> get_XmlNamespaces() { throw null; }
        }
    }
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
    public partial class !XamlLoader
    {
        internal !XamlLoader() { }
        public static object TryLoad(System.IServiceProvider , string ) { throw null; }
        public static object TryLoad(string ) { throw null; }
    }
}
