//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     GenAPI Version: 7.0.8.6004
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Avalonia.Themes.Fluent
{
    public partial class ColorPaletteResources : Avalonia.AvaloniaObject, Avalonia.Controls.IResourceNode
    {
        public static readonly Avalonia.DirectProperty<Avalonia.Themes.Fluent.ColorPaletteResources, Avalonia.Media.Color> AccentProperty;
        public ColorPaletteResources() { }
        public Avalonia.Media.Color Accent { get { throw null; } set { } }
        public Avalonia.Media.Color AltHigh { get { throw null; } set { } }
        public Avalonia.Media.Color AltLow { get { throw null; } set { } }
        public Avalonia.Media.Color AltMedium { get { throw null; } set { } }
        public Avalonia.Media.Color AltMediumHigh { get { throw null; } set { } }
        public Avalonia.Media.Color AltMediumLow { get { throw null; } set { } }
        public Avalonia.Media.Color BaseHigh { get { throw null; } set { } }
        public Avalonia.Media.Color BaseLow { get { throw null; } set { } }
        public Avalonia.Media.Color BaseMedium { get { throw null; } set { } }
        public Avalonia.Media.Color BaseMediumHigh { get { throw null; } set { } }
        public Avalonia.Media.Color BaseMediumLow { get { throw null; } set { } }
        public Avalonia.Media.Color ChromeAltLow { get { throw null; } set { } }
        public Avalonia.Media.Color ChromeBlackHigh { get { throw null; } set { } }
        public Avalonia.Media.Color ChromeBlackLow { get { throw null; } set { } }
        public Avalonia.Media.Color ChromeBlackMedium { get { throw null; } set { } }
        public Avalonia.Media.Color ChromeBlackMediumLow { get { throw null; } set { } }
        public Avalonia.Media.Color ChromeDisabledHigh { get { throw null; } set { } }
        public Avalonia.Media.Color ChromeDisabledLow { get { throw null; } set { } }
        public Avalonia.Media.Color ChromeGray { get { throw null; } set { } }
        public Avalonia.Media.Color ChromeHigh { get { throw null; } set { } }
        public Avalonia.Media.Color ChromeLow { get { throw null; } set { } }
        public Avalonia.Media.Color ChromeMedium { get { throw null; } set { } }
        public Avalonia.Media.Color ChromeMediumLow { get { throw null; } set { } }
        public Avalonia.Media.Color ChromeWhite { get { throw null; } set { } }
        public Avalonia.Media.Color ErrorText { get { throw null; } set { } }
        public bool HasResources { get { throw null; } }
        public Avalonia.Media.Color ListLow { get { throw null; } set { } }
        public Avalonia.Media.Color ListMedium { get { throw null; } set { } }
        public Avalonia.Media.Color RegionColor { get { throw null; } set { } }
        protected override void OnPropertyChanged(Avalonia.AvaloniaPropertyChangedEventArgs change) { }
        public bool TryGetResource(object key, Avalonia.Styling.ThemeVariant? theme, out object? value) { throw null; }
    }
    public enum DensityStyle
    {
        Normal = 0,
        Compact = 1,
    }
    public partial class FluentTheme : Avalonia.Styling.Styles
    {
        public static readonly Avalonia.StyledProperty<Avalonia.Themes.Fluent.DensityStyle> DensityStyleProperty;
        public FluentTheme(System.IServiceProvider? sp = null) { }
        public Avalonia.Themes.Fluent.DensityStyle DensityStyle { get { throw null; } set { } }
        public System.Collections.Generic.IDictionary<Avalonia.Styling.ThemeVariant, Avalonia.Themes.Fluent.ColorPaletteResources> Palettes { [System.Runtime.CompilerServices.CompilerGeneratedAttribute] get { throw null; } }
        protected override void OnPropertyChanged(Avalonia.AvaloniaPropertyChangedEventArgs change) { }
    }
}
namespace CompiledAvaloniaXaml
{
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
    public partial class !AvaloniaResources
    {
        internal !AvaloniaResources() { }
        public partial class NamespaceInfo:/FluentTheme.xaml : Avalonia.Markup.Xaml.XamlIl.Runtime.IAvaloniaXamlIlXmlNamespaceInfoProvider
        {
            public static Avalonia.Markup.Xaml.XamlIl.Runtime.IAvaloniaXamlIlXmlNamespaceInfoProvider Singleton;
            public NamespaceInfo:/FluentTheme.xaml() { }
            public virtual System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IReadOnlyList<Avalonia.Markup.Xaml.XamlIl.Runtime.AvaloniaXamlIlXmlNamespaceInfo>> XmlNamespaces { get { throw null; } }
            public virtual System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IReadOnlyList<Avalonia.Markup.Xaml.XamlIl.Runtime.AvaloniaXamlIlXmlNamespaceInfo>> get_XmlNamespaces() { throw null; }
        }
    }
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
    public partial class !XamlLoader
    {
        internal !XamlLoader() { }
        public static object TryLoad(System.IServiceProvider , string ) { throw null; }
        public static object TryLoad(string ) { throw null; }
    }
}
