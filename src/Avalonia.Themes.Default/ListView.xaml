<!--https://github.com/dotnet/wpf/blob/master/src/Microsoft.DotNet.Wpf/src/Themes/XAML/ListView.xaml-->
<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Styles.Resources>
    <LinearGradientBrush x:Key="GridViewColumnHeaderBackground"
                       StartPoint="0,0"
                       EndPoint="0,1">
      <LinearGradientBrush.GradientStops>
        <GradientStop Color="#FFFFFFFF"
                      Offset="0"/>
        <GradientStop Color="#FFFFFFFF"
                      Offset="0.4091"/>
        <GradientStop Color="#FFF7F8F9"
                      Offset="1"/>
      </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="GridViewColumnHeaderBorderBackground"
                     StartPoint="0,0"
                     EndPoint="0,1">
      <LinearGradientBrush.GradientStops>
        <GradientStop Color="#FFF2F2F2"
                      Offset="0"/>
        <GradientStop Color="#FFD5D5D5"
                      Offset="1"/>
      </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="GridViewColumnHeaderHoverBackground"
                   StartPoint="0,0"
                   EndPoint="0,1">
      <LinearGradientBrush.GradientStops>
        <GradientStop Color="#FFBDEDFF"
                      Offset="0"/>
        <GradientStop Color="#FFB7E7FB"
                      Offset="1"/>
      </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="GridViewColumnHeaderPressBackground"
                         StartPoint="0,0"
                         EndPoint="0,1">
      <LinearGradientBrush.GradientStops>
        <GradientStop Color="#FF8DD6F7"
                      Offset="0"/>
        <GradientStop Color="#FF8AD1F5"
                      Offset="1"/>
      </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
  </Styles.Resources>
  <!--=================================================================
        ListView
    ==================================================================-->

  <Style Selector="ListViewItem">
    <!--<Setter Property="FocusVisualStyle"
            Value="{StaticResource ListViewItemFocusVisual}"/>-->
    <Setter Property="Background"
            Value="Transparent"/>
    <Setter Property="BorderBrush"
            Value="Transparent"/>
    <Setter Property="BorderThickness"
            Value="1"/>
    <Setter Property="Margin"
            Value="0,0,0,1"/>
    <Setter Property="Padding"
            Value="5,2,5,2"/>
    <Setter Property="VerticalContentAlignment"
            Value="Center"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <Border BorderThickness="{TemplateBinding BorderThickness}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  Background="{TemplateBinding Background}"
                  CornerRadius="2">
            <Border Name="InnerBorder"
                    CornerRadius="1"
                    BorderThickness="1">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition MaxHeight="11"/>
                  <RowDefinition/>
                </Grid.RowDefinitions>
                <Rectangle Name="UpperHighlight"
                           IsVisible="false"
                           Fill="#75FFFFFF"/>
                <!--remove the HorizontalAlignment due to HeaderRowPresenter does not have the ability to align to center or right-->
                <GridViewRowPresenter Grid.RowSpan="2"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
              </Grid>
            </Border>
          </Border>
          <!--<ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="true">
              <Setter Property="Background"
                      Value="{StaticResource ListItemHoverFill}"/>
              <Setter Property="BorderBrush"
                      Value="#FFCCF0FF"/>
              <Setter TargetName="UpperHighlight"
                      Property="Visibility"
                      Value="Visible"/>
            </Trigger>
            <Trigger Property="IsSelected"
                     Value="true">
              <Setter Property="Background"
                      Value="{StaticResource ListItemSelectedFill}"/>
              <Setter Property="BorderBrush"
                      Value="#FF98DDFB"/>
              <Setter TargetName="InnerBorder"
                      Property="BorderBrush"
                      Value="#80FFFFFF"/>
              <Setter TargetName="UpperHighlight"
                      Property="Visibility"
                      Value="Visible"/>
              <Setter TargetName="UpperHighlight"
                      Property="Fill"
                      Value="#40FFFFFF"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected"
                           Value="true"/>
                <Condition Property="Selector.IsSelectionActive"
                           Value="false"/>
              </MultiTrigger.Conditions>
              <Setter Property="Background"
                      Value="{StaticResource ListItemSelectedInactiveFill}"/>
              <Setter Property="BorderBrush"
                      Value="#FFCFCFCF"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected"
                           Value="true"/>
                <Condition Property="IsMouseOver"
                           Value="true"/>
              </MultiTrigger.Conditions>
              <Setter Property="Background"
                      Value="{StaticResource ListItemSelectedHoverFill}"/>
              <Setter Property="BorderBrush"
                      Value="#FF98DDFB"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled"
                     Value="false">
              <Setter Property="Foreground"
                      Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
          </ControlTemplate.Triggers>-->
          </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- GridView ScrollViewer Style -->
  <Style  Selector="ScrollViewer">
    <Setter Property="Focusable"
            Value="false"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <!-- Grid.Column="0" Grid.Row="0" -->
            <DockPanel Margin="{TemplateBinding Padding}">
              <!-- Column Headers Scroll Viewer -->
              <ScrollViewer DockPanel.Dock="Top"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden"
                            Focusable="false">
                <!-- Set a Margin here because ListViewItem has a 2-width border around. Otherwise the horizontal scrolling of header bar and item will not keep the same pace -->
                <GridViewHeaderRowPresenter Margin="2,0,2,0"
                                            Columns="{Binding Path=TemplatedParent.View.Columns,RelativeSource={RelativeSource TemplatedParent}}"
                                            
                                            ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate,RelativeSource={RelativeSource TemplatedParent}}"
                                            ColumnHeaderStringFormat="{Binding Path=TemplatedParent.View.ColumnHeaderStringFormat,RelativeSource={RelativeSource TemplatedParent}}"
                                            AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder,RelativeSource={RelativeSource TemplatedParent}}"
                                            ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu,RelativeSource={RelativeSource TemplatedParent}}"
                                            ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip,RelativeSource={RelativeSource TemplatedParent}}"
                                            />
                <!--ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle,RelativeSource={RelativeSource TemplatedParent}}" 
                                            ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector,RelativeSource={RelativeSource TemplatedParent}}"-->
              </ScrollViewer>
              <!-- Items Scroll Viewer -->
              <ScrollContentPresenter Name="PART_ScrollContentPresenter"
                                      Content="{TemplateBinding Content}"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      />
              <!--CanContentScroll="{TemplateBinding CanContentScroll}"-->
            </DockPanel>
            <!-- Horizontal Scroll Bar -->
            <ScrollBar Name="PART_HorizontalScrollBar"
                       Orientation="Horizontal"
                       Grid.Row="1"
                       Minimum="0.0"
                       Maximum="{TemplateBinding HorizontalScrollBarMaximum}"
                       ViewportSize="{TemplateBinding HorizontalScrollBarViewportSize}"
                       Value="{Binding Path=HorizontalOffset,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                       Visibility="{TemplateBinding HorizontalScrollBarVisibility}"
                       Cursor="Arrow"/>
            <!-- Vertical Scroll Bar -->
            <ScrollBar Name="PART_VerticalScrollBar"
                       Orientation="Vertical"
                       Grid.Column="1"
                       Minimum="0.0"
                       Maximum="{TemplateBinding VerticalScrollBarMaximum}"
                       ViewportSize="{TemplateBinding VerticalScrollBarViewportSize}"
                       Value="{Binding Path=VerticalOffset,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                       Visibility="{TemplateBinding VerticalScrollBarVisibility}"
                       Cursor="Arrow"/>
            <!-- Right Bottom Corner -->
            <DockPanel Grid.Column="1"
                       Grid.Row="1"
                       Background="{Binding Path=Background,ElementName=PART_VerticalScrollBar}"
                       LastChildFill="false">
              <Rectangle DockPanel.Dock="Left"
                         Width="1"
                         Fill="White"
                         />
              <!--IsVisible="{TemplateBinding VerticalScrollBarVisibility}"-->
              <Rectangle DockPanel.Dock="Top"
                         Height="1"
                         Fill="White"
                        />
              <!-- IsVisible="{TemplateBinding HorizontalScrollBarVisibility}"-->
            </DockPanel>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Selector="Thumb.GridViewColumnHeaderGripper">

    <Setter Property="Canvas.Right"
            Value="-9"/>
    <Setter Property="Width"
            Value="18"/>
    <Setter Property="Height"
            Value="{Binding Path=ActualHeight,RelativeSource={RelativeSource TemplatedParent}}"/>
    <Setter Property="Padding"
            Value="0"/>
    <Setter Property="Background"
            Value="{StaticResource GridViewColumnHeaderBorderBackground}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Padding="{TemplateBinding Padding}"
                  Background="Transparent">
            <Rectangle HorizontalAlignment="Center"
                       Width="1"
                       Fill="{TemplateBinding Background}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Selector="GridViewColumnHeader">
    <Setter Property="HorizontalContentAlignment"
            Value="Center"/>
    <Setter Property="VerticalContentAlignment"
            Value="Center"/>
    <Setter Property="Background"
            Value="{StaticResource GridViewColumnHeaderBackground}"/>
    <Setter Property="BorderBrush"
            Value="{StaticResource GridViewColumnHeaderBorderBackground}"/>
    <Setter Property="BorderThickness"
            Value="0"/>
    <Setter Property="Padding"
            Value="2,0,2,0"/>
    <Setter Property="Foreground"
            Value="{DynamicResource ThemeForegroundBrush}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
          <Grid>
            <Border Name="HeaderBorder"
                    BorderThickness="0,1,0,1"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    Background="{TemplateBinding Background}">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition MaxHeight="7"/>
                  <RowDefinition/>
                </Grid.RowDefinitions>
                <Rectangle Name="UpperHighlight"
                           IsVisible="False"
                           Fill="#FFE3F7FF"/>
                <Border Grid.RowSpan="2"
                        Padding="{TemplateBinding Padding}">
                  <ContentPresenter Name="HeaderContent"
                                    Margin="0,0,0,1"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                </Border>
              </Grid>
            </Border>
            <Border Name="HeaderHoverBorder"
                    BorderThickness="1,0,1,1"
                    Margin="1,1,0,0"/>
            <Border Name="HeaderPressBorder"
                    BorderThickness="1,1,1,0"
                    Margin="1,0,0,1"/>
            <Canvas>
              <Thumb x:Name="PART_HeaderGripper" Classes="GridViewColumnHeaderGripper"/>
            </Canvas>
          </Grid>
          <!--<ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="true">
              <Setter TargetName="HeaderBorder"
                      Property="Background"
                      Value="{StaticResource GridViewColumnHeaderHoverBackground}"/>
              <Setter TargetName="HeaderHoverBorder"
                      Property="BorderBrush"
                      Value="#FF88CBEB"/>
              <Setter TargetName="UpperHighlight"
                      Property="Visibility"
                      Value="Visible"/>
              <Setter TargetName="PART_HeaderGripper"
                      Property="Background"
                      Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsPressed"
                     Value="true">
              <Setter TargetName="HeaderBorder"
                      Property="Background"
                      Value="{StaticResource GridViewColumnHeaderPressBackground}"/>
              <Setter TargetName="HeaderHoverBorder"
                      Property="BorderBrush"
                      Value="#FF95DAF9"/>
              <Setter TargetName="HeaderPressBorder"
                      Property="BorderBrush"
                      Value="#FF7A9EB1"/>
              <Setter TargetName="UpperHighlight"
                      Property="Visibility"
                      Value="Visible"/>
              <Setter TargetName="UpperHighlight"
                      Property="Fill"
                      Value="#FFBCE4F9"/>
              <Setter TargetName="PART_HeaderGripper"
                      Property="Visibility"
                      Value="Hidden"/>
              <Setter TargetName="HeaderContent"
                      Property="Margin"
                      Value="1,1,0,0"/>
            </Trigger>
            <Trigger Property="Height"
                     Value="Auto">
              <Setter Property="MinHeight"
                      Value="20"/>
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
              <Setter Property="Foreground"
                      Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
          </ControlTemplate.Triggers>-->
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <!--<Style.Triggers>
      <Trigger Property="Role"
               Value="Floating">
        <Setter Property="Opacity"
                Value="0.4082"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
              <Canvas Name="PART_FloatingHeaderCanvas">
                <Rectangle Opacity="0.4697"
                           Fill="#FF000000"
                           Width="{TemplateBinding ActualWidth}"
                           Height="{TemplateBinding ActualHeight}"/>
              </Canvas>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>-->
      <!--<Trigger Property="Role"
               Value="Padding">
        <Setter Property="Template">
          <Setter.Value>-->
            <!--The same as normal header, just no gripper.-->
      <!--
      <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
              <Border Name="HeaderBorder"
                      BorderThickness="0,1,0,1"
                      BorderBrush="{TemplateBinding BorderBrush}"
                      Background="{TemplateBinding Background}"/>
              <ControlTemplate.Triggers>
                <Trigger Property="Height"
                         Value="Auto">
                  <Setter Property="MinHeight"
                          Value="20"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>-->
  </Style>
</Styles>
