using Avalonia.Input;

namespace Avalonia.FreeDesktop
{
    internal static class XkbKeyTransform
    {
        public static PhysicalKey PhysicalKeyFromScanCode(uint scanCode)
            => scanCode is > 0 and <= 255 ? ConvertKey((byte)scanCode) : PhysicalKey.None;

        public static PhysicalKey ConvertKey(byte scanCode) => scanCode switch
        {
            // Writing System Keys
            0x31 => PhysicalKey.Backquote,
            0x33 => PhysicalKey.Backslash,
            0x22 => PhysicalKey.BracketLeft,
            0x23 => PhysicalKey.BracketRight,
            0x3B => PhysicalKey.Comma,
            0x13 => PhysicalKey.Digit0,
            0x0A => PhysicalKey.Digit1,
            0x0B => PhysicalKey.Digit2,
            0x0C => PhysicalKey.Digit3,
            0x0D => PhysicalKey.Digit4,
            0x0E => PhysicalKey.Digit5,
            0x0F => PhysicalKey.Digit6,
            0x10 => PhysicalKey.Digit7,
            0x11 => PhysicalKey.Digit8,
            0x12 => PhysicalKey.Digit9,
            0x15 => PhysicalKey.Equal,
            0x5E => PhysicalKey.IntlBackslash,
            0x61 => PhysicalKey.IntlRo,
            0x84 => PhysicalKey.IntlYen,
            0x26 => PhysicalKey.A,
            0x38 => PhysicalKey.B,
            0x36 => PhysicalKey.C,
            0x28 => PhysicalKey.D,
            0x1A => PhysicalKey.E,
            0x29 => PhysicalKey.F,
            0x2A => PhysicalKey.G,
            0x2B => PhysicalKey.H,
            0x1F => PhysicalKey.I,
            0x2C => PhysicalKey.J,
            0x2D => PhysicalKey.K,
            0x2E => PhysicalKey.L,
            0x3A => PhysicalKey.M,
            0x39 => PhysicalKey.N,
            0x20 => PhysicalKey.O,
            0x21 => PhysicalKey.P,
            0x18 => PhysicalKey.Q,
            0x1B => PhysicalKey.R,
            0x27 => PhysicalKey.S,
            0x1C => PhysicalKey.T,
            0x1E => PhysicalKey.U,
            0x37 => PhysicalKey.V,
            0x19 => PhysicalKey.W,
            0x35 => PhysicalKey.X,
            0x1D => PhysicalKey.Y,
            0x34 => PhysicalKey.Z,
            0x14 => PhysicalKey.Minus,
            0x3C => PhysicalKey.Period,
            0x30 => PhysicalKey.Quote,
            0x2F => PhysicalKey.Semicolon,
            0x3D => PhysicalKey.Slash,

            // Functional Keys
            0x40 => PhysicalKey.AltLeft,
            0x6C => PhysicalKey.AltRight,
            0x16 => PhysicalKey.Backspace,
            0x42 => PhysicalKey.CapsLock,
            0x87 => PhysicalKey.ContextMenu,
            0x25 => PhysicalKey.ControlLeft,
            0x69 => PhysicalKey.ControlRight,
            0x24 => PhysicalKey.Enter,
            0x85 => PhysicalKey.MetaLeft,
            0x86 => PhysicalKey.MetaRight,
            0x32 => PhysicalKey.ShiftLeft,
            0x3E => PhysicalKey.ShiftRight,
            0x41 => PhysicalKey.Space,
            0x17 => PhysicalKey.Tab,
            0x64 => PhysicalKey.Convert,
            0x65 => PhysicalKey.KanaMode,
            0x82 => PhysicalKey.Lang1,
            0x83 => PhysicalKey.Lang2,
            0x62 => PhysicalKey.Lang3,
            0x63 => PhysicalKey.Lang4,
            0x5D => PhysicalKey.Lang5,
            0x66 => PhysicalKey.NonConvert,

            // Control Pad Section
            0x77 => PhysicalKey.Delete,
            0x73 => PhysicalKey.End,
            0x92 => PhysicalKey.Help,
            0x6E => PhysicalKey.Home,
            0x76 => PhysicalKey.Insert,
            0x75 => PhysicalKey.PageDown,
            0x70 => PhysicalKey.PageUp,

            // Arrow Pad Section
            0x74 => PhysicalKey.ArrowDown,
            0x71 => PhysicalKey.ArrowLeft,
            0x72 => PhysicalKey.ArrowRight,
            0x6F => PhysicalKey.ArrowUp,

            // Numpad Section
            0x4D => PhysicalKey.NumLock,
            0x5A => PhysicalKey.NumPad0,
            0x57 => PhysicalKey.NumPad1,
            0x58 => PhysicalKey.NumPad2,
            0x59 => PhysicalKey.NumPad3,
            0x53 => PhysicalKey.NumPad4,
            0x54 => PhysicalKey.NumPad5,
            0x55 => PhysicalKey.NumPad6,
            0x4F => PhysicalKey.NumPad7,
            0x50 => PhysicalKey.NumPad8,
            0x51 => PhysicalKey.NumPad9,
            0x56 => PhysicalKey.NumPadAdd,
            //     => PhysicalKey.NumPadClear,
            0x81 => PhysicalKey.NumPadComma,
            0x5B => PhysicalKey.NumPadDecimal,
            0x6A => PhysicalKey.NumPadDivide,
            0x68 => PhysicalKey.NumPadEnter,
            0x7D => PhysicalKey.NumPadEqual,
            0x3F => PhysicalKey.NumPadMultiply,
            0xBB => PhysicalKey.NumPadParenLeft,
            0xBC => PhysicalKey.NumPadParenRight,
            0x52 => PhysicalKey.NumPadSubtract,

            // Function Section
            0x09 => PhysicalKey.Escape,
            0x43 => PhysicalKey.F1,
            0x44 => PhysicalKey.F2,
            0x45 => PhysicalKey.F3,
            0x46 => PhysicalKey.F4,
            0x47 => PhysicalKey.F5,
            0x48 => PhysicalKey.F6,
            0x49 => PhysicalKey.F7,
            0x4A => PhysicalKey.F8,
            0x4B => PhysicalKey.F9,
            0x4C => PhysicalKey.F10,
            0x5F => PhysicalKey.F11,
            0x60 => PhysicalKey.F12,
            0xBF => PhysicalKey.F13,
            0xC0 => PhysicalKey.F14,
            0xC1 => PhysicalKey.F15,
            0xC2 => PhysicalKey.F16,
            0xC3 => PhysicalKey.F17,
            0xC4 => PhysicalKey.F18,
            0xC5 => PhysicalKey.F19,
            0xC6 => PhysicalKey.F20,
            0xC7 => PhysicalKey.F21,
            0xC8 => PhysicalKey.F22,
            0xC9 => PhysicalKey.F23,
            0xCA => PhysicalKey.F24,
            0x6B => PhysicalKey.PrintScreen,
            0x4E => PhysicalKey.ScrollLock,
            0x7F => PhysicalKey.Pause,

            // Media Keys
            0xA6 => PhysicalKey.BrowserBack,
            0xA4 => PhysicalKey.BrowserFavorites,
            0xA7 => PhysicalKey.BrowserForward,
            0xB4 => PhysicalKey.BrowserHome,
            0xB5 => PhysicalKey.BrowserRefresh,
            0xE1 => PhysicalKey.BrowserSearch,
            0x88 => PhysicalKey.BrowserStop,
            0xA9 => PhysicalKey.Eject,
            0x98 => PhysicalKey.LaunchApp1,
            0x94 => PhysicalKey.LaunchApp2,
            0xA3 => PhysicalKey.LaunchMail,
            0xAC => PhysicalKey.MediaPlayPause,
            0xB3 => PhysicalKey.MediaSelect,
            0xAE => PhysicalKey.MediaStop,
            0xAB => PhysicalKey.MediaTrackNext,
            0xAD => PhysicalKey.MediaTrackPrevious,
            0x7C => PhysicalKey.Power,
            0x96 => PhysicalKey.Sleep,
            0x7A => PhysicalKey.AudioVolumeDown,
            0x79 => PhysicalKey.AudioVolumeMute,
            0x7B => PhysicalKey.AudioVolumeUp,
            0x97 => PhysicalKey.WakeUp,

            // Legacy Keys
            0x89 => PhysicalKey.Again,
            0x8D => PhysicalKey.Copy,
            0x91 => PhysicalKey.Cut,
            0x90 => PhysicalKey.Find,
            0x8E => PhysicalKey.Open,
            0x8F => PhysicalKey.Paste,
            //     => PhysicalKey.Props,
            0x8C => PhysicalKey.Select,
            0x8B => PhysicalKey.Undo,
            _ => PhysicalKey.None
        };

        public static Key ConvertKey(XkbKey key) => key switch
        {
            XkbKey.Cancel => Key.Cancel,
            XkbKey.BackSpace => Key.Back,
            XkbKey.Tab => Key.Tab,
            XkbKey.Linefeed => Key.LineFeed,
            XkbKey.Clear => Key.Clear,
            XkbKey.Return => Key.Return,
            XkbKey.KP_Enter => Key.Return,
            XkbKey.Pause => Key.Pause,
            XkbKey.Caps_Lock => Key.CapsLock,
            // XkbKey.? => Key.HangulMode,
            // XkbKey.? => Key.JunjaMode,
            // XkbKey.? => Key.FinalMode,
            // XkbKey.? => Key.KanjiMode,
            XkbKey.Escape => Key.Escape,
            // XkbKey.? => Key.ImeConvert,
            // XkbKey.? => Key.ImeNonConvert,
            // XkbKey.? => Key.ImeAccept,
            // XkbKey.? => Key.ImeModeChange,
            XkbKey.space => Key.Space,
            XkbKey.Prior => Key.Prior,
            XkbKey.KP_Prior => Key.Prior,
            XkbKey.Page_Down => Key.PageDown,
            XkbKey.KP_Page_Down => Key.PageDown,
            XkbKey.End => Key.End,
            XkbKey.KP_End => Key.End,
            XkbKey.Home => Key.Home,
            XkbKey.KP_Home => Key.Home,
            XkbKey.Left => Key.Left,
            XkbKey.KP_Left => Key.Left,
            XkbKey.Up => Key.Up,
            XkbKey.KP_Up => Key.Up,
            XkbKey.Right => Key.Right,
            XkbKey.KP_Right => Key.Right,
            XkbKey.Down => Key.Down,
            XkbKey.KP_Down => Key.Down,
            XkbKey.Select => Key.Select,
            XkbKey.Print => Key.Print,
            XkbKey.Execute => Key.Execute,
            // XkbKey.? => Key.Snapshot,
            XkbKey.Insert => Key.Insert,
            XkbKey.KP_Insert => Key.Insert,
            XkbKey.Delete => Key.Delete,
            XkbKey.KP_Delete => Key.Delete,
            XkbKey.Help => Key.Help,
            XkbKey.A => Key.A,
            XkbKey.B => Key.B,
            XkbKey.C => Key.C,
            XkbKey.D => Key.D,
            XkbKey.E => Key.E,
            XkbKey.F => Key.F,
            XkbKey.G => Key.G,
            XkbKey.H => Key.H,
            XkbKey.I => Key.I,
            XkbKey.J => Key.J,
            XkbKey.K => Key.K,
            XkbKey.L => Key.L,
            XkbKey.M => Key.M,
            XkbKey.N => Key.N,
            XkbKey.O => Key.O,
            XkbKey.P => Key.P,
            XkbKey.Q => Key.Q,
            XkbKey.R => Key.R,
            XkbKey.S => Key.S,
            XkbKey.T => Key.T,
            XkbKey.U => Key.U,
            XkbKey.V => Key.V,
            XkbKey.W => Key.W,
            XkbKey.X => Key.X,
            XkbKey.Y => Key.Y,
            XkbKey.Z => Key.Z,
            XkbKey.a => Key.A,
            XkbKey.b => Key.B,
            XkbKey.c => Key.C,
            XkbKey.d => Key.D,
            XkbKey.e => Key.E,
            XkbKey.f => Key.F,
            XkbKey.g => Key.G,
            XkbKey.h => Key.H,
            XkbKey.i => Key.I,
            XkbKey.j => Key.J,
            XkbKey.k => Key.K,
            XkbKey.l => Key.L,
            XkbKey.m => Key.M,
            XkbKey.n => Key.N,
            XkbKey.o => Key.O,
            XkbKey.p => Key.P,
            XkbKey.q => Key.Q,
            XkbKey.r => Key.R,
            XkbKey.s => Key.S,
            XkbKey.t => Key.T,
            XkbKey.u => Key.U,
            XkbKey.v => Key.V,
            XkbKey.w => Key.W,
            XkbKey.x => Key.X,
            XkbKey.y => Key.Y,
            XkbKey.z => Key.Z,
            XkbKey.Super_L => Key.LWin ,
            XkbKey.Super_R => Key.RWin ,
            XkbKey.Meta_L => Key.LWin,
            XkbKey.Meta_R => Key.RWin,
            XkbKey.Menu => Key.Apps,
            // XkbKey.? => Key.Sleep,
            XkbKey.KP_0 => Key.NumPad0,
            XkbKey.KP_1 => Key.NumPad1,
            XkbKey.KP_2 => Key.NumPad2,
            XkbKey.KP_3 => Key.NumPad3,
            XkbKey.KP_4 => Key.NumPad4,
            XkbKey.KP_5 => Key.NumPad5,
            XkbKey.KP_6 => Key.NumPad6,
            XkbKey.KP_7 => Key.NumPad7,
            XkbKey.KP_8 => Key.NumPad8,
            XkbKey.KP_9 => Key.NumPad9,
            XkbKey.multiply => Key.Multiply,
            XkbKey.KP_Multiply => Key.Multiply,
            XkbKey.KP_Add => Key.Add,
            // XkbKey.? => Key.Separator,
            XkbKey.KP_Subtract => Key.Subtract,
            XkbKey.KP_Decimal => Key.Decimal,
            XkbKey.KP_Divide => Key.Divide,
            XkbKey.F1 => Key.F1,
            XkbKey.F2 => Key.F2,
            XkbKey.F3 => Key.F3,
            XkbKey.F4 => Key.F4,
            XkbKey.F5 => Key.F5,
            XkbKey.F6 => Key.F6,
            XkbKey.F7 => Key.F7,
            XkbKey.F8 => Key.F8,
            XkbKey.F9 => Key.F9,
            XkbKey.F10 => Key.F10,
            XkbKey.F11 => Key.F11,
            XkbKey.F12 => Key.F12,
            XkbKey.L3 => Key.F13,
            XkbKey.F14 => Key.F14,
            XkbKey.L5 => Key.F15,
            XkbKey.F16 => Key.F16,
            XkbKey.F17 => Key.F17,
            XkbKey.L8 => Key.F18,
            XkbKey.L9 => Key.F19,
            XkbKey.L10 => Key.F20,
            XkbKey.R1 => Key.F21,
            XkbKey.R2 => Key.F22,
            XkbKey.F23 => Key.F23,
            XkbKey.R4 => Key.F24,
            XkbKey.Num_Lock => Key.NumLock,
            XkbKey.Scroll_Lock => Key.Scroll,
            XkbKey.Shift_L => Key.LeftShift,
            XkbKey.Shift_R => Key.RightShift,
            XkbKey.Control_L => Key.LeftCtrl,
            XkbKey.Control_R => Key.RightCtrl,
            XkbKey.Alt_L => Key.LeftAlt,
            XkbKey.Alt_R => Key.RightAlt,
            // XkbKey.? => Key.BrowserBack,
            // XkbKey.? => Key.BrowserForward,
            // XkbKey.? => Key.BrowserRefresh,
            // XkbKey.? => Key.BrowserStop,
            // XkbKey.? => Key.BrowserSearch,
            // XkbKey.? => Key.BrowserFavorites,
            // XkbKey.? => Key.BrowserHome,
            // XkbKey.? => Key.VolumeMute,
            // XkbKey.? => Key.VolumeDown,
            // XkbKey.? => Key.VolumeUp,
            // XkbKey.? => Key.MediaNextTrack,
            // XkbKey.? => Key.MediaPreviousTrack,
            // XkbKey.? => Key.MediaStop,
            // XkbKey.? => Key.MediaPlayPause,
            // XkbKey.? => Key.LaunchMail,
            // XkbKey.? => Key.SelectMedia,
            // XkbKey.? => Key.LaunchApplication1,
            // XkbKey.? => Key.LaunchApplication2,
            XkbKey.minus => Key.OemMinus,
            XkbKey.underscore => Key.OemMinus,
            XkbKey.plus => Key.OemPlus,
            XkbKey.equal => Key.OemPlus,
            XkbKey.bracketleft => Key.OemOpenBrackets,
            XkbKey.braceleft => Key.OemOpenBrackets,
            XkbKey.bracketright => Key.OemCloseBrackets,
            XkbKey.braceright => Key.OemCloseBrackets,
            XkbKey.backslash => Key.OemPipe,
            XkbKey.bar => Key.OemPipe,
            XkbKey.semicolon => Key.OemSemicolon,
            XkbKey.colon => Key.OemSemicolon,
            XkbKey.apostrophe => Key.OemQuotes,
            XkbKey.quotedbl => Key.OemQuotes,
            XkbKey.comma => Key.OemComma,
            XkbKey.less => Key.OemComma,
            XkbKey.period => Key.OemPeriod,
            XkbKey.greater => Key.OemPeriod,
            XkbKey.slash => Key.Oem2,
            XkbKey.question => Key.Oem2,
            XkbKey.grave => Key.OemTilde,
            XkbKey.asciitilde => Key.OemTilde,
            XkbKey.XK_1 => Key.D1,
            XkbKey.exclam => Key.D1,
            XkbKey.XK_2 => Key.D2,
            XkbKey.at => Key.D2,
            XkbKey.XK_3 => Key.D3,
            XkbKey.numbersign => Key.D3,
            XkbKey.XK_4 => Key.D4,
            XkbKey.dollar => Key.D4,
            XkbKey.XK_5 => Key.D5,
            XkbKey.percent => Key.D5,
            XkbKey.XK_6 => Key.D6,
            XkbKey.asciicircum => Key.D6,
            XkbKey.XK_7 => Key.D7,
            XkbKey.ampersand => Key.D7,
            XkbKey.XK_8 => Key.D8,
            XkbKey.asterisk => Key.D8,
            XkbKey.XK_9 => Key.D9,
            XkbKey.parenleft => Key.D9,
            XkbKey.XK_0 => Key.D0,
            XkbKey.parenright => Key.D0,
            // XkbKey.? => Key.AbntC1,
            // XkbKey.? => Key.AbntC2,
            // XkbKey.? => Key.Oem8,
            // XkbKey.? => Key.Oem102,
            // XkbKey.? => Key.ImeProcessed,
            // XkbKey.? => Key.System,
            // XkbKey.? => Key.OemAttn,
            // XkbKey.? => Key.OemFinish,
            // XkbKey.? => Key.DbeHiragana,
            // XkbKey.? => Key.OemAuto,
            // XkbKey.? => Key.DbeDbcsChar,
            // XkbKey.? => Key.OemBackTab,
            // XkbKey.? => Key.Attn,
            // XkbKey.? => Key.DbeEnterWordRegisterMode,
            // XkbKey.? => Key.DbeEnterImeConfigureMode,
            // XkbKey.? => Key.EraseEof,
            // XkbKey.? => Key.Play,
            // XkbKey.? => Key.Zoom,
            // XkbKey.? => Key.NoName,
            // XkbKey.? => Key.DbeEnterDialogConversionMode,
            // XkbKey.? => Key.OemClear,
            // XkbKey.? => Key.DeadCharProcessed,
            _ => Key.None
        };
    }
}
