using Avalonia.Metadata;

namespace Avalonia.Input
{
    /// <summary>
    /// Identifies specific pointer generated by input device.
    /// </summary>
    /// <remarks>
    /// Some devices, for instance, touchscreen might generate a pointer on each physical contact.
    /// </remarks>
    [NotClientImplementable]
    public interface IPointer
    {
        /// <summary>
        /// Gets a unique identifier for the input pointer.
        /// </summary>
        int Id { get; }

        /// <summary>
        /// Captures pointer input to the specified control.
        /// </summary>
        /// <param name="control">The control.</param>
        /// <remarks>
        /// When an element captures the pointer, it receives pointer input whether the cursor is 
        /// within the control's bounds or not. The current pointer capture control is exposed
        /// by the <see cref="Captured"/> property.
        /// </remarks>
        void Capture(IInputElement? control);

        /// <summary>
        /// Gets the control that is currently capturing by the pointer, if any.
        /// </summary>
        /// <remarks>
        /// When an element captures the pointer, it receives pointer input whether the cursor is 
        /// within the control's bounds or not. To set the pointer capture, call the 
        /// <see cref="Capture"/> method.
        /// </remarks>
        IInputElement? Captured { get; }

        /// <summary>
        /// Gets the pointer device type.
        /// </summary>
        PointerType Type { get; }

        /// <summary>
        /// Gets a value that indicates whether the input is from the primary pointer when multiple pointers are registered.
        /// </summary>
        bool IsPrimary { get; }
    }

    /// <summary>
    /// Enumerates pointer device types.
    /// </summary>
    public enum PointerType
    {
        Mouse,
        Touch,
        Pen
    }
}
